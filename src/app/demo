let svg = d3.select(".my_bar")

  let margin = {top: 20, right: 20, bottom: 30, left: 50},
      width = +svg.attr("width") - margin.left - margin.right,
      height = +svg.attr("height") - margin.top - margin.bottom;

  let x = d3.scaleLinear().rangeRound([0, width]);
  let y = d3.scaleBand().rangeRound([0,height]).padding(0.1);

  let g = svg.append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  d3.csv("data.csv", function(error, data) {
    if (error) throw error;
    console.log(data);

    x.domain([0, d3.max(data, function(d) { return d.col1; })]);
    y.domain(data.map(function(d) { return d.letter; }));


  g.append("g")
      .attr("class", "axis x_axis")
      .attr("transform", "translate(0," + height + ")")
      .call(d3.axisBottom(x));


  g.append("g")
      .attr("class", "axis y_axis")
      .call(d3.axisLeft(y));

  g.selectAll(".bar")
    .data(data)
    .enter().append("rect")
      .attr("class", "bar1")
      .attr("x", 0)
      .attr("y", function(d) { return y(d.letter) + 10; })
      .attr("width", function(d) { return x(d.col1); })
      .attr("height", y.bandwidth() - 20);
      
  g.selectAll(".bar2")
    .data(data)
    .enter().append("rect")
      .attr("class", "bar2")
      .attr("x", 0)
      .attr("y", function(d) { return y(d.letter); })
      .attr("width", function(d) { return x(d.col2); })
      .attr("height", y.bandwidth());
});